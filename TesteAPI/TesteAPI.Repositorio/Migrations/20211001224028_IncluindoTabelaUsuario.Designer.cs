// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteAPI.Repositorio.Contexto;

namespace TesteAPI.Repositorio.Migrations
{
    [DbContext(typeof(CastGroupContexto))]
    [Migration("20211001224028_IncluindoTabelaUsuario")]
    partial class IncluindoTabelaUsuario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("TesteAPI.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Codigo");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Codigo = 1,
                            Descricao = "Comportamental"
                        },
                        new
                        {
                            Codigo = 2,
                            Descricao = "Programação"
                        },
                        new
                        {
                            Codigo = 3,
                            Descricao = "Qualidade e Processos"
                        });
                });

            modelBuilder.Entity("TesteAPI.Dominio.Entidades.Curso", b =>
                {
                    b.Property<int>("CodigoCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CodigoCategoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataTernmino")
                        .HasColumnType("date");

                    b.Property<string>("DescricaoAssunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("QuantidadeTurma")
                        .HasColumnType("int");

                    b.HasKey("CodigoCurso");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("TesteAPI.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "cast",
                            Role = "Admin",
                            Senha = "abc123"
                        });
                });

            modelBuilder.Entity("TesteAPI.Dominio.Entidades.Categoria", b =>
                {
                    b.HasOne("TesteAPI.Dominio.Entidades.Curso", "Cursos")
                        .WithOne("Categoria")
                        .HasForeignKey("TesteAPI.Dominio.Entidades.Categoria", "Codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("TesteAPI.Dominio.Entidades.Curso", b =>
                {
                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
